version: '3.8'
services:

  dbmessaggiotask:
    container_name: dbmessaggiotask
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
    - messaggiotask

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - messaggiotask
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true

  service_messaggiotask:
    container_name: service_messaggiotask
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    networks:
    - messaggiotask
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: dbmessaggiotask
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      LOG_LEVEL: ${LOG_LEVEL}
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: ${KAFKA_TOPIC}
    ports:
    - "8080:8080"
    depends_on:
      - dbmessaggiotask
      - kafka

networks:
  messaggiotask:
    driver: bridge