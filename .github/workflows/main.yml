name: CI

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: "messaggiotask"
  CONTAINER_NAME: "messaggiotask"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.APISSH }}
          envs: IMAGE_NAME,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Login 
            docker login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

            # Set env variables
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_DB=${{ vars.POSTGRES_DB }}
            export LOG_LEVEL=${{ vars.LOG_LEVEL }}
            export KAFKA_TOPIC=${{ vars.KAFKA_TOPIC }}

            # Stop running container
            docker stop $(echo $CONTAINER_NAME)

            # Remove old container
            docker rm $(echo $CONTAINER_NAME)

            # Run a new container from a new image
            docker run \
            --restart always \
            --publish 8080:8080 \
            --network=denis_messaggiotask \
            --name $(echo $CONTAINER_NAME) \
            ${{ secrets.DOCKERHUB_USER }}/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)